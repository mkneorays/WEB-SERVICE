procedure in PostgreSql
----------------------------------
CREATE OR REPLACE FUNCTION getEmpById(IN id character(10) , OUT ee_title character(20), OUT surename character(20))
LANGUAGE PLPGSQL
AS
$BODY$
begin
select title , eesurname into ee_title, surename  from emp111 where payrollid=id;
      --db table name         --out param
end;

$BODY$
;
---------------------------------------------------------------------------
dao layer
public List<Employee> fetch() {
		logger.debug("ENTERED fetch METHOD DAO  CLASS.........................");
		System.out.println("FETCH METHOD==="+sjc);
		//set PRocedure name
		sjc.setProcedureName("getEmpById"); //both method r working postgreSql 
		//sjc.withFunctionName("getEmpById");
		MapSqlParameterSource in=new MapSqlParameterSource();
		in.addValue("id", 65465);
				//execute PL/SQL Procedure
				Map<String, Object> m =sjc.execute(in);
		         Employee emp = new Employee();
		         emp.setTitle((String)m.get("ee_title"));
		         emp.setEeSurname((String)m.get("surename"));
		         System.out.println(emp);
				return null;
				
	}//method
	--------------------------------------------------------------------------
	<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<mvc:annotation-driven />
	<!--no need transaction manager for SimpleJdbcCall 
	 <tx:annotation-driven transaction-manager="txm"/> -->
	<context:component-scan base-package="com.itcs" />
	
	<!-- <bean id="txm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"/>
	</bean> -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.dbuser}" />
		<property name="password" value="${jdbc.dbpassword}" />
	</bean>
     
     <bean id="jt" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
      <constructor-arg ref="dataSource"/>
     </bean>
     
     <bean id="sjc" class="org.springframework.jdbc.core.simple.SimpleJdbcCall">
      <constructor-arg ref="dataSource"/>
     </bean>
	<bean id="templateResolver"
		class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/WEB-INF/thl/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
	</bean>

	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
	</bean>

	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
	</bean>
   <context:property-placeholder location="classpath:database.properties"/>
</beans>
